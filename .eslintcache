[{"C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\index.js":"1","C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\App.js":"2","C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\reportWebVitals.js":"3","C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\CartItem.js":"4","C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\cart.js":"5"},{"size":221,"mtime":1612359719542,"results":"6","hashOfConfig":"7"},{"size":191,"mtime":1612364639212,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2651,"mtime":1612364575490,"results":"10","hashOfConfig":"7"},{"size":1193,"mtime":1612365078668,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k7tyz7",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\index.js",[],"C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\App.js",["23"],"C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\CartItem.js",["24","25"],"import React from 'react';\r\n\r\nclass CartItem extends React.Component{\r\n    \r\n\r\n    //yaha arrow function kyu tuje pata h\r\n    //>>this is very crucial\r\n\r\n    increaseQuantity=()=>{\r\n        //Conept of batching is imp here and also note that setSate work both async and sync(in promises)\r\n        //they can be handled or called in 2 ways (callback and the 1st one)\r\n        //this.state.prop=\"xyz\"  --> will not cause rendering\r\n\r\n        // this.state.qty+=1;    //this wont change the display stuff\r\n        // console.log('this',this.state);\r\n\r\n        // *************setState form 1 *************\r\n\r\n        // this.setState({   //this work\r\n        //     qty:this.state.qty+1\r\n        // });\r\n        // *************setState form 2 *************\r\n        //note it act async here\r\n        //learn about batching once \r\n        \r\n        this.setState((prevState)=>{\r\n            return {\r\n                qty:prevState.qty+1\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    decreaseQuantity=()=>{\r\n        \r\n        \r\n        this.setState((prevState)=>{\r\n            const {qty}=this.state;\r\n            if(qty==0){\r\n                return;\r\n            }\r\n\r\n            return {\r\n                qty:prevState.qty-1\r\n            }\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const {title,price,qty}=this.props.product;\r\n        return(\r\n            <div className=\"cart-item\">\r\n                <div className=\"left-block\">\r\n                    <img style={styles.image}/>\r\n\r\n\r\n                </div>\r\n                <div className=\"right-block\">\r\n                    <div style={{fontSize:25}}>{title}</div>\r\n                    <div style={{color:'#777'}}> Rs {price}</div>\r\n                    <div style={ { color: '#777' } }>Qty : {qty}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                        {/* Buttons*/}\r\n                        <img  onClick={this.increaseQuantity}   className=\"action-icons\" alt=\"increase\" src=\"https://www.flaticon.com/premium-icon/icons/svg/3114/3114793.svg\"/>\r\n                        <img onClick={this.decreaseQuantity}  className=\"action-icons\" alt=\"decrease\" src=\"https://as1.ftcdn.net/jpg/03/73/49/86/500_F_373498649_nBxauQ0ipBSVrVcMpWWVmTpXu3BLvRyY.jpg\"/>\r\n                        <img className=\"action-icons\" alt=\"delete\" src=\"https://www.flaticon.com/premium-icon/icons/svg/2907/2907762.svg\"/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    image: {\r\n      height: 110,\r\n      width: 110,\r\n      borderRadius: 4,\r\n      background: '#ccc'\r\n    }\r\n  }\r\n\r\nexport  default CartItem;","C:\\Users\\DELL\\Desktop\\Harshal Done Work\\CN React\\cart-item\\src\\cart.js",[],{"ruleId":"26","severity":1,"message":"27","line":5,"column":7,"nodeType":"28","messageId":"29","endLine":5,"endColumn":11},{"ruleId":"30","severity":1,"message":"31","line":50,"column":19,"nodeType":"32","messageId":"33","endLine":50,"endColumn":21},{"ruleId":"34","severity":1,"message":"35","line":70,"column":21,"nodeType":"36","endLine":70,"endColumn":48},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]